[33m[nodemon] 1.18.4[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./server.js`[39m
Executing (default): CREATE TABLE IF NOT EXISTS "groups" ("group_id" UUID NOT NULL , "name" VARCHAR(255) NOT NULL, "level" INTEGER DEFAULT 0, "created_at" TIMESTAMP WITH TIME ZONE, "updated_at" TIMESTAMP WITH TIME ZONE, PRIMARY KEY ("group_id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'groups' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_users_role' GROUP BY 1
Executing (default): CREATE TABLE IF NOT EXISTS "users" ("users_id" UUID NOT NULL , "group_id" UUID NOT NULL REFERENCES "groups" ("group_id") ON DELETE CASCADE ON UPDATE CASCADE, "regime_id" UUID NOT NULL, "login" VARCHAR(255) NOT NULL UNIQUE, "firstname" VARCHAR(255) NOT NULL, "lastname" VARCHAR(255) NOT NULL, "email" VARCHAR(255) NOT NULL UNIQUE, "password" VARCHAR(255) NOT NULL, "manager_id" UUID NOT NULL, "is_manager" BOOLEAN DEFAULT false, "is_rh" BOOLEAN DEFAULT false, "is_admin" BOOLEAN DEFAULT false, "base" DECIMAL DEFAULT 1, "role" "public"."enum_users_role" DEFAULT 'disabled', "contact_tel_pro" VARCHAR(255) NOT NULL, "contact_tel_astr" VARCHAR(255) NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE, "updated_at" TIMESTAMP WITH TIME ZONE, PRIMARY KEY ("users_id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
